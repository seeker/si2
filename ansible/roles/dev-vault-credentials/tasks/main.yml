---
- name: Create integration approle
  uri:
    url: "{{ vault_api_url }}/auth/approle/role/integration"
    method: POST
    body_format: json
    status_code: 204
    headers:
      X-Vault-Token: "{{ vault_token }}"
    body:
      token_ttl: 30m
      token_period: 30m
      token_policies:
        - node

- name: Configure RabbitMQ role for integration
  uri:
    url: "{{ vault_api_url }}/rabbitmq/roles/integration"
    method: POST
    body_format: json
    status_code: 204
    headers:
      X-Vault-Token: "{{ vault_token }}"
    body: 
      # The space before the first { is needed to trick ansible into thinking it's a string
      vhosts: ' {"{{ rabbitmq_vhost }}": {"configure":".*", "write":".*", "read": ".*"}}'

- name: Rename dbnode approle role id
  uri:
    url: "{{ vault_api_url }}/auth/approle/role/dbnode/role-id"
    method: POST
    body_format: json
    status_code: 204
    headers:
      X-Vault-Token: "{{ vault_token }}"
    body:
      role_id: dbnode

- name: Lookup dbnode approle secret-id
  uri:
    url: "{{ vault_api_url }}/auth/approle/role/dbnode/secret-id/lookup"
    method: POST
    body_format: json
    status_code:
      - 200
      - 204
    headers:
      X-Vault-Token: "{{ vault_token }}"
    body:
      secret_id: dbnode
  register: dbnode_lookup
  check_mode: no

- name: Create custom dbnode approle secret id
  uri:
    url: "{{ vault_api_url }}/auth/approle/role/dbnode/custom-secret-id"
    method: POST
    body_format: json
    status_code: 200
    headers:
      X-Vault-Token: "{{ vault_token }}"
    body:
      secret_id: dbnode
  when: dbnode_lookup.status == 204

- name: Rename integration approle role id
  uri:
    url: "{{ vault_api_url }}/auth/approle/role/integration/role-id"
    method: POST
    body_format: json
    status_code: 204
    headers:
      X-Vault-Token: "{{ vault_token }}"
    body:
      role_id: integration

- name: Lookup integration approle secret-id
  uri:
    url: "{{ vault_api_url }}/auth/approle/role/integration/secret-id/lookup"
    method: POST
    body_format: json
    status_code:
      - 200
      - 204
    headers:
      X-Vault-Token: "{{ vault_token }}"
    body:
      secret_id: integration
  register: integration_lookup
  check_mode: no

- name: Create custom integration approle secret id
  uri:
    url: "{{ vault_api_url }}/auth/approle/role/integration/custom-secret-id"
    method: POST
    body_format: json
    status_code: 200
    headers:
      X-Vault-Token: "{{ vault_token }}"
    body:
      secret_id: integration
  when: integration_lookup.status == 204

- name: Check if Minio admin credentails exist in Vault
  uri:
    url: "{{ vault_api_url }}/kv/minio/admin"
    method: GET
    body_format: json
    status_code:
    - 200
    - 404
    headers:
      X-Vault-Token: "{{ vault_token }}"

  register: password_response
  check_mode: no

- name: Generate Minio admin credentials
  block:
  - name: Store Minio admin credentials
    uri:
      url: "{{ vault_api_url }}/kv/minio/admin"
      method: POST
      body_format: json
      status_code: 204
      headers:
        X-Vault-Token: "{{ vault_token }}"
      body:
        username: minioadmin
        password: minioadmin

  when: password_response.status == 404
