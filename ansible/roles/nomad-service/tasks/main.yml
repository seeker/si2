---
- name: Install cleint packages
  apt:
    name:
      - docker.io
    state: present
  when: nomad_client
  tags: package

# TODO replace this with secret from Vault
- name: Check that the Nomad gossip key is set
  assert:
    quiet: yes
    msg: Please set the gossip_encryption_key (preferably using vault)
    that:
      - gossip_encryption_key is defined

- name: Create Nomad configuration  directory
  file:
    state: directory
    path: "{{ nomad_config_directory }}"
    recurse: yes

- name: Create Nomad data directory
  file:
    state: directory
    path: "{{ nomad_data_directory }}"
    recurse: false

- name: Create MongoDB persistent data directory
  file:
    state: directory
    path: "{{ mongodb_data_directory }}"
    recurse: yes

- name: Create thumbnail persistent data directory
  file:
    state: directory
    path: "{{ thumbnail_data_directory }}"
    recurse: yes
    owner: nobody

- name: Create Docker registry persistent data directory
  file:
    state: directory
    path: "{{ docker_registry_directory }}"
    recurse: yes

- name: Create systemd unit for Nomad
  template:
    src: nomad.service.j2
    dest: /etc/systemd/system/nomad.service
  notify: Reload systemd daemon

- name: Create Nomad main configuration
  template:
    src: nomad.hcl.j2
    dest: "{{ nomad_config_directory }}/nomad.hcl"
  notify: Restart Nomad

- name: Create Docker daemon configuration
  template:
    src: daemon.json.j2
    dest: "/etc/docker/daemon.json"
    owner: root
    group: root
    mode: u=rw,g=rw,o=r
  notify: Restart Nomad

- name: Enable and start Nomad agent
  systemd:
    name: nomad
    state: started
    enabled: yes

- name: Create CNI binary directory
  file:
    state: directory
    path: "{{ cni_binary_directory }}"
    recurse: yes
    owner: root
    group: root
    mode: u=rwx,g=rx,o=rx

- name: Download CNI plugin
  get_url:
    url: https://github.com/containernetworking/plugins/releases/download/v0.8.2/cni-plugins-linux-amd64-v0.8.2.tgz
    dest: /var/tmp/cni.tgz

- name: Extract CNI plugin
  unarchive:
    remote_src: yes
    src: /var/tmp/cni.tgz
    dest: "{{ cni_binary_directory }}"

- name: Configure bride netfilter calls
  template:
    src: 90-cni-nomad.conf.j2
    dest: /etc/sysctl.d/90-cni-nomad.conf
    owner: root
    group: root
    mode: u=rw,g=r,o=r
